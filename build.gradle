/*
 * Copyright 2020 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'se.patrikerdes.use-latest-versions' version '0.2.13'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id "com.github.jk1.dependency-license-report" version "1.13"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: "com.github.jk1.dependency-license-report"

version = '0.0.1'

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/gocd-maven-repo/generic/gocd" }
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'

    compile group: 'com.beust', name: 'jcommander', version: '1.78'
    compile group: 'me.tongfei', name: 'progressbar', version: '0.8.1'
    compile group: 'org.jooq', name: 'jooq', version: '3.13.1'

    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.8.7'
    compile group: 'net.sf', name: 'dbdeploy', version: '2.11.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.11'

    testImplementation group: "org.junit.jupiter", name: "junit-jupiter-api", version: "5.6.0"
    testRuntimeOnly group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "5.6.0"
}

targetCompatibility = 1.8
sourceCompatibility = 1.8

mainClassName = 'com.thoughtworks.go.dbsync.cli.Main'
applicationDefaultJvmArgs = ['-Xmx4g']

tasks.withType(AbstractArchiveTask) {
    reproducibleFileOrder = true
    preserveFileTimestamps = false
}


test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(['Main-Class': mainClassName])
    }
}

distributions {
    main {
        contents {
            from("LICENSE")
            from("README.md")

            from(generateLicenseReport) {
                into "licenses"
            }

            from(file('LICENSE')) {
                into "licenses"
            }

            from("src/main/h2deltas") {
                into "h2deltas"
            }

            from("src/main/pgdeltas") {
                into "pgdeltas"
            }
        }
    }
}

distTar {
    compression = Compression.GZIP
}
